<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="author" content="Colin Hughes">
<meta name="description" content="A website dedicated to the fascinating world of mathematics and programming">
<meta name="keywords" content="programming,mathematics,problems,puzzles">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>#623 Lambda Count - Project Euler</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="apple-touch-icon" sizes="180x180" href="favicons/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="favicons/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="favicons/favicon-16x16.png">
<link rel="manifest" href="favicons/site.webmanifest">
<link rel="mask-icon" href="favicons/safari-pinned-tab.svg" color="#da532c">
<link rel="shortcut icon" href="favicons/favicon.ico">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="msapplication-config" content="favicons/browserconfig.xml">
<meta name="theme-color" content="#ffffff">

<link rel="stylesheet" type="text/css" href="themes/style_main.1752917516.css">
<link rel="stylesheet" type="text/css" href="themes/style_default.1737760786.css">
<script src="js/mathjax_config.js"></script>
<script src="https://cdnjs.cloudflare.com/polyfill/v3/polyfill.min.js?version=4.8.0&features=es6"></script>
<script id="MathJax-script" async
   src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js">
</script></head>

<body>

<div id="container">

<header>
   <div>
      <img id="logo" src="themes/logo_default.png" alt="Project Euler">
   </div>
	<div id="info_panel">
		&nbsp;&nbsp;&nbsp;<a href="search"><img src="images/icons/search_engine.png" alt="Search Problems" title="Search Problems" class="icon"></a>&nbsp;&nbsp;&nbsp;<a href="rss2_euler.xml"><img src="images/icons/news_feed.png" alt="RSS Feed" title="RSS Feed" class="icon"></a>
	</div>
</header>

<nav>
<input type="checkbox" id="nav_toggle" class="nav_toggle">
<label for="nav_toggle" class="nav_toggle_label"><i id="nav_toggle_icon" class="fas fa-bars"></i></label>
   <ul>
		<li><a href="about">About</a></li>
		<li><a href="archives" id="current">Archives</a></li>
		<li><a href="recent">Recent</a></li>
		<li><a href="news">News</a></li>
		<li><a href="register">Register</a></li>
		<li><a href="sign_in">Sign In</a></li>
   </ul>
</nav>

<div id="content">

<div class="center print"><img src="images/clipart/print_page_logo.png" alt="projecteuler.net"></div>
<h2>Lambda Count</h2><div id="problem_icons" class="noprint"><a href="minimal=623"><img src="images/icons/file_html.png" title="Show HTML problem content" class="icon"></a>&nbsp;<span class="tooltip"><img src="images/icons/info.png" class="icon"><span class="tooltiptext_right">Published on Sunday, 25th March 2018, 10:00 am; Solved by 374;<br>Difficulty rating: 45%</span></span></div><div id="problem_info"><h3>Problem 623</h3></div>
<div class="problem_content" role="problem">
<p>The <strong>lambda-calculus</strong> is a universal model of computation at the core of functional programming languages. It is based on <strong>lambda-terms</strong>, a minimal programming language featuring only function definitions, function calls and variables. Lambda-terms are built according to the following rules:</p>
<ul>
<li>Any <strong>variable</strong> $x$ (single letter, from some infinite alphabet) is a lambda-term.</li>
<li>If $M$ and $N$ are lambda-terms, then $(M N)$ is a lambda-term, called the <strong>application</strong> of $M$ to $N$.</li>
<li>If $x$ is a variable and $M$ is a term, then $(\lambda x. M)$ is a lambda-term, called an <strong>abstraction</strong>. An abstraction defines an anonymous function, taking $x$ as parameter and sending back $M$.</li>
</ul>

<p>A lambda-term $T$ is said to be <strong>closed</strong> if for all variables $x$, all occurrences of $x$ within $T$ are contained within some abstraction $(\lambda x. M)$ in $T$. The smallest such abstraction is said to <strong>bind</strong> the occurrence of the variable $x$. In other words, a lambda-term is closed if all its variables are bound to parameters of enclosing functions definitions. For example, the term $(\lambda x. x)$ is closed, while the term $(\lambda x. (x y))$ is not because $y$ is not bound.</p>

<p>Also, we can rename variables as long as no binding abstraction changes. This means that $(\lambda x. x)$ and $(\lambda y. y)$ should be considered equivalent since we merely renamed a parameter. Two terms equivalent modulo such renaming are called <i>$\alpha$-equivalent</i>. Note that $(\lambda x. (\lambda y. (x y)))$ and $(\lambda x. (\lambda x. (x x)))$ are not $\alpha$-equivalent, since the abstraction binding the first variable was the outer one and becomes the inner one. However, $(\lambda x. (\lambda y. (x y)))$ and $(\lambda y. (\lambda x. (y x)))$ are $\alpha$-equivalent.</p>

<p>The following table regroups the lambda-terms that can be written with at most $15$ symbols, symbols being parenthesis, $\lambda$, dot and variables.</p>

\[\begin{array}{|c|c|c|c|}
\hline
(\lambda x.x) &amp; (\lambda x.(x x)) &amp; (\lambda x.(\lambda y.x)) &amp; (\lambda x.(\lambda y.y)) \\
\hline
(\lambda x.(x (x x))) &amp; (\lambda x.((x x) x)) &amp; (\lambda x.(\lambda y.(x x))) &amp; (\lambda x.(\lambda y.(x y))) \\
\hline
(\lambda x.(\lambda y.(y x))) &amp; (\lambda x.(\lambda y.(y y))) &amp; (\lambda x.(x (\lambda y.x))) &amp; (\lambda x.(x (\lambda y.y))) \\
\hline
(\lambda x.((\lambda y.x) x)) &amp; (\lambda x.((\lambda y.y) x)) &amp; ((\lambda x.x) (\lambda x.x)) &amp; (\lambda x.(x (x (x x)))) \\
\hline
(\lambda x.(x ((x x) x))) &amp; (\lambda x.((x x) (x x))) &amp; (\lambda x.((x (x x)) x)) &amp; (\lambda x.(((x x) x) x)) \\
\hline
\end{array}\]

<p>Let be $\Lambda(n)$ the number of distinct closed lambda-terms that can be written using at most $n$ symbols, where terms that are $\alpha$-equivalent to one another should be counted only once. You are given that $\Lambda(6) = 1$, $\Lambda(9) = 2$, $\Lambda(15) = 20$ and $\Lambda(35) = 3166438$.</p>
<p>Find $\Lambda(2000)$. Give the answer modulo $1\,000\,000\,007$.</p>

</div><br>
<br>
</div> <!--end_content-->

</div> <!--end_container-->

<div id="footer" class="noprint">
Project Euler: <a href="copyright">Copyright Information</a> | <a href="privacy">Privacy Policy</a>
</div>

<div id="modal_window">
   <div id="modal_content" class="message_body">
   <p>The page has been left unattended for too long and that link/button is no longer active. Please refresh the page.</p>
   </div>
</div>

<script type="application/json" id="page_expire">86400</script>
<script src="js/general.1681854148.js"></script>

</body>
</html>
